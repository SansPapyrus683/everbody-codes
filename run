#!/bin/bash

: '
adopted from my local cp setup
this just takes in a file that ends in either cpp, py, or java
and compiles/runs it with input.txt or stdin depending on the -i option
'

use_stdin=false
script=
while [ $OPTIND -le "$#" ]; do
    if getopts i option; then
        case "$option"
        in
            i) use_stdin=true ;;
        esac
    else
        script="${!OPTIND}"
        ((OPTIND++))
    fi
done

input=input.txt
case $script in
    *.cpp )
        if g++ "$script" -I . -g -std=c++17 -O3 -Wall -Wextra -Wno-sign-compare -Werror=return-type -Wl,--rpath=/usr/local/cs/lib64 -fsanitize=address -fsanitize=undefined -fsanitize=bounds -fno-omit-frame-pointer; then
        # if g++ "$script" -I . -g -std=c++17; then
            echo "compilation done"
            if [ $use_stdin = false ]; then
                ./a.out <$input
            else
                ./a.out
            fi
            rm a.out
        fi ;;
    *.c )
        if gcc "$script" -I . -g -O3; then
            echo "compilation done"
            if [ $use_stdin = false ]; then
                ./a.out <$input
            else
                ./a.out
            fi
            rm a.out
        fi ;;
    *.py )
        if [ $use_stdin = false ]; then
            python "$script" <$input
        else
            python "$script"
        fi ;;
    *.java )
        if [ $use_stdin = false ]; then
            java "$script" <$input
        else
            java "$script"
        fi ;;
    * )
        echo "bad programming language" ;;
esac
